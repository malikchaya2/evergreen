directive @aliases(db: String, json: String) on FIELD_DEFINITION

type User {
  UserID: String @aliases(db: Id, json: user_id)
  DisplayName: String @aliases(db: DispName, json: display_name)
  OnlyApi: Boolean! @aliases(db: OnlyAPI)
  Roles: [String!]! @aliases(db: SystemRoles)
}

type DisplayTask {
  Name: String
  ExecutionTasks: [String!]! @aliases(db: ExecTasks)
}
type APIIssueLink {
  URL: String @aliases(db: URL, json: url)
  IssueKey: String @aliases(db: IssueKey, json: issue_key)
}

type APIAnnotationSource {
  Author: String @aliases(db: Author, json: author)
  Time: Time @aliases(db: Time, json: time)
}

type ApiTaskAnnotation {
  Id: String @aliases(db: Id, json: id)
  TaskId: String @aliases(db: TaskId, json: task_id)
  TaskExecution: Int @aliases(db: TaskExecution, json: task_execution)
  APIAnnotation: APIAnnotation @aliases(db: APIAnnotation, json: api_annotation)
  UserAnnotation: APIAnnotation
    @aliases(db: UserAnnotation, json: user_annotation)
}
type APIAnnotation {
  Note: String @aliases(db: Note, json: note)
  Issues: [APIIssueLink] @aliases(db: Issues, json: issues)
  SuspectIssues: [APIIssueLink]
    @aliases(db: SuspectIssues, json: suspected_issues)
  Source: APIAnnotationSource @aliases(db: Source, json: source)
}

scalar Time
scalar Any
